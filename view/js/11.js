'use strict';

const frames = [
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', '*', '*', '*', '*', ' '],
    [' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' '],
  ],
];

let count = ' ';

// eslint-disable-next-line no-unused-vars
const animation = obj => {
  let res = '';
  for (const line of frames[count % frames.length]) {
    for (const symbol of line) {
      res += symbol;
    }
    res += '\n';
  }
  count++;
  obj.anim.value = res;
};

// eslint-disable-next-line no-unused-vars
const positiveCount = obj => {
  const arr = obj.arr.value.split(' ').map(el => Number(el));
  obj.pos.value = arr.filter(el => el > ' ').length;
};

// eslint-disable-next-line no-unused-vars
const maxArr = obj => {
  const arr = obj.arr.value.split(' ').map(el => Number(el));
  obj.max.value = Math.max(...arr);
};

